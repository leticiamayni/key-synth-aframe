//criar entity
AFRAME.registerComponent('other-box', {
  init: function() {
     var el = document.createElement('a-entity');
     el.setAttribute('geometry', { primitive: 'box' });
     el.setAttribute('material', { color: 'blue' });
     el.setAttribute('position', { x: 2, y: 0, z: -3 });
    
     //na cena
     el.setAttribute('other-box');
     myScene.appendChild(el);
  }
});

//click anim box
AFRAME.registerComponent('start-box', {
  init: function() {
    var moveBox = document.querySelector('#moveBox');
    moveBox.addEventListener('click', function(event) {
        moveBox.emit("startAnimation");
    });
  }
});

//SCRIPT SYNTH ANTERIOR ------------------------

//criar context
var context = new AudioContext();
var masterVol = context.createGain();
var oscList = {};

masterVol.gain.value = 0.2;

// destino
masterVol.connect(context.destination);

//eventos
keyboard.keyDown = function(note, frequency) {
  var osc1 = context.createOscillator();
  osc1.frequency.value = frequency;
  osc1.type = 'square';
  
  var osc2 = context.createOscillator();
  osc2.frequency.value = frequency;
  osc2.type = 'sine';
 
  //conecta ao gain
  osc1.connect(masterVol);
  osc2.connect(masterVol);
 
  //conectar gain ao destination
  masterVol.connect(context.destination);

  //add osc criados a variavel vazia (library) 'oscillator'
  oscillators[frequency] = [osc1, osc2];

  //start
  osc1.start(context.currentTime);
  osc2.start(context.currentTime);
}

//liberar tecla
keyboard.keyUp = function(note, frequency) {
  oscList[frequency].forEach(function (oscillator) {
    oscillator.stop(context.currentTime);
  });
}

//-----------------------------------------------------

noteFreq.forEach(function(keys, idx) {
  let keyList = Object.entries(keys);
  let octaveEl = document.createElement('a-entity');
  octaveEl.className = "octave";

  keyList.forEach(function(key) {
    if (key[0].length == 1) {
      octaveEl.appendChild(createKey(key[0], idx, key[1]));
    }
  });

  keyboardEl.appendChild(octaveEl);
});

function createKey(note, octave, freq) {
  let keyElement = document.createElement('a-entity');

  keyElement.className = "key";
  keyElement.dataset["octave"] = octave;
  keyElement.dataset["note"] = note;
  keyElement.dataset["frequency"] = freq;

  keyElement.addEventListener("mousedown", notePressed, false);
  keyElement.addEventListener("mouseup", noteReleased, false);
  keyElement.addEventListener("mouseover", notePressed, false);
  keyElement.addEventListener("mouseleave", noteReleased, false);

  return keyElement;
}

//noteFreq 

var noteFreq = null;

function createNoteTable() {
  let noteFreq = [];
  for (let i = 0; i < 9; i++) {
    noteFreq[i] = [];
  }

  noteFreq[0]["A"] = 27.500000000000000;
  noteFreq[0]["A#"] = 29.135235094880619;
  noteFreq[0]["B"] = 30.867706328507756;

  noteFreq[1]["C"] = 32.703195662574829;
  noteFreq[1]["C#"] = 34.647828872109012;
  noteFreq[1]["D"] = 36.708095989675945;
  noteFreq[1]["D#"] = 38.890872965260113;
  noteFreq[1]["E"] = 41.203444614108741;
  noteFreq[1]["F"] = 43.653528929125485;
  noteFreq[1]["F#"] = 46.249302838954299;
  noteFreq[1]["G"] = 48.999429497718661;
  noteFreq[1]["G#"] = 51.913087197493142;
  noteFreq[1]["A"] = 55.000000000000000;
  noteFreq[1]["A#"] = 58.270470189761239;
  noteFreq[1]["B"] = 61.735412657015513;
  
  noteFreq[7]["C"] = 2093.004522404789077;
  noteFreq[7]["C#"] = 2217.461047814976769;
  noteFreq[7]["D"] = 2349.318143339260482;
  noteFreq[7]["D#"] = 2489.015869776647285;
  noteFreq[7]["E"] = 2637.020455302959437;
  noteFreq[7]["F"] = 2793.825851464031075;
  noteFreq[7]["F#"] = 2959.955381693075191;
  noteFreq[7]["G"] = 3135.963487853994352;
  noteFreq[7]["G#"] = 3322.437580639561108;
  noteFreq[7]["A"] = 3520.000000000000000;
  noteFreq[7]["A#"] = 3729.310092144719331;
  noteFreq[7]["B"] = 3951.066410048992894;
  
  noteFreq[8]["C"] = 4186.009044809578154;
  return noteFreq;

}

//key_map

//KEYBOARD 
var key_map = {
  //72 o H
  72: "C4",
  // 74 o 'J'
  74: "Dd4",
  // 75 o 'K'
  75: "D4",
  // 76 o 'L'
  76: "Eb4",
};
